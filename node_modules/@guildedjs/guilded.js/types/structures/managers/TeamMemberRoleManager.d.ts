import type { APITeamRole } from '@guildedjs/guilded-api-typings';
import type { Client } from '../Client';
import type { Member } from '../Member';
import { Role } from '../Role';
import { BaseManager } from './BaseManager';
export declare class TeamMemberRoleManager extends BaseManager<APITeamRole, Role> {
    readonly member: Member;
    constructor(client: Client, member: Member);
    /**
     * Shortcut for adding a role to a member.
     * @param role The ID or Role object of the role to add to the member.
     * @see {@link https://zaida04.github.io/guildedjs-selfbot-docs/classes/guilded_js.teammanager.html#addroletomember}
     */
    append(role: string | Role): Promise<void>;
    /**
     * Shortcut for removing a role from a member.
     * @param role The ID or Role object of the role to add to the member.
     * @see {@link https://zaida04.github.io/guildedjs-selfbot-docs/classes/guilded_js.teammanager.html#removerolefrommember}
     */
    remove(role: string | Role): Promise<void>;
}
//# sourceMappingURL=TeamMemberRoleManager.d.ts.map