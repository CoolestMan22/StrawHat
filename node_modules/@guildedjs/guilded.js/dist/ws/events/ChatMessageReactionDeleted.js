"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typings_1 = require("../../typings");
const Event_1 = __importDefault(require("./Event"));
class ChatMessageReactionDeletedEvent extends Event_1.default {
    constructor(client) {
        super(client);
    }
    ingest(data) {
        var _a, _b, _c, _d, _e, _f;
        if (data) {
            const reactionID = data.reaction.customReactionId.toString();
            const reacter = this.client.users.cache.get(data.reaction.createdBy);
            let channel = this.client.channels.cache.get(data.channelId);
            if (!channel) {
                if (!((_b = (_a = this.client.options) === null || _a === void 0 ? void 0 : _a.partials) === null || _b === void 0 ? void 0 : _b.includes('CHANNEL')))
                    return [false, 'Uncached channel'];
                channel = this.client.channels.add({
                    contentType: data.contentType,
                    id: data.channelId,
                    teamId: (_c = data.teamId) !== null && _c !== void 0 ? _c : undefined,
                    type: data.channelType,
                });
            }
            const message = (_d = channel === null || channel === void 0 ? void 0 : channel.messages) === null || _d === void 0 ? void 0 : _d.cache.get(data.message.id);
            if (!message && !((_f = (_e = this.client.options) === null || _e === void 0 ? void 0 : _e.partials) === null || _f === void 0 ? void 0 : _f.includes('MESSAGE')))
                return [false, 'Uncached message'];
            const messageReaction = message === null || message === void 0 ? void 0 : message.reactions.get(reactionID);
            messageReaction === null || messageReaction === void 0 ? void 0 : messageReaction.users.delete(data.reaction.createdBy);
            if (!(messageReaction === null || messageReaction === void 0 ? void 0 : messageReaction.users.size))
                message === null || message === void 0 ? void 0 : message.reactions.delete(reactionID);
            this.client.emit(typings_1.events.MESSAGE_REACTION_DELETE, messageReaction !== null && messageReaction !== void 0 ? messageReaction : reactionID, reacter !== null && reacter !== void 0 ? reacter : data.reaction.createdBy);
            return [true];
        }
        return [false, 'passthrough'];
    }
}
exports.default = ChatMessageReactionDeletedEvent;
//# sourceMappingURL=ChatMessageReactionDeleted.js.map