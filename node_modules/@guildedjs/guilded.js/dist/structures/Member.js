"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Member = void 0;
const Base_1 = require("./Base");
const TeamMemberRoleManager_1 = require("./managers/TeamMemberRoleManager");
/**
 * A member of a team
 */
class Member extends Base_1.Base {
    constructor(client, data, team) {
        super(client, data);
        this.team = team;
        this.roles = new TeamMemberRoleManager_1.TeamMemberRoleManager(client, this);
        this.joinDate = new Date(data.joinDate);
        this.badges = [];
        this.nickname = null;
        this.lastOnline = null;
        this.profilePicture = null;
        this.profileBannerBlur = null;
        this.aboutInfo = null;
        this.socialLinks = [];
        this.roleIDs = [];
        this.subscriptionType = null;
        this.aliases = [];
        this.patch(data);
    }
    /**
     * Update the data in this structure
     * @internal
     */
    patch(data) {
        if ('name' in data && data.name !== undefined)
            this.name = data.name;
        if ('nickname' in data && data.nickname !== undefined)
            this.nickname = data.nickname;
        if ('badges' in data && data.badges !== undefined)
            this.badges = data.badges;
        if ('membershipRole' in data && data.membershipRole !== undefined)
            this.membershipRole = data.membershipRole;
        if ('lastOnline' in data && data.lastOnline !== undefined) {
            this.lastOnline = data.lastOnline ? new Date(data.lastOnline) : null;
        }
        if ('profilePicture' in data && data.profilePicture !== undefined)
            this.profilePicture = data.profilePicture;
        if ('profileBannerBlur' in data && data.profileBannerBlur !== undefined) {
            this.profileBannerBlur = data.profileBannerBlur;
        }
        if ('aboutInfo' in data && data.aboutInfo !== undefined)
            this.aboutInfo = data.aboutInfo;
        if ('userStatus' in data && data.userStatus !== undefined)
            this.userStatus = data.userStatus;
        if ('socialLinks' in data && data.socialLinks !== undefined)
            this.socialLinks = data.socialLinks;
        if ('roleIds' in data && data.roleIds !== undefined)
            this.roleIDs = data.roleIds;
        if ('subscriptionType' in data && data.subscriptionType !== undefined) {
            this.subscriptionType = data.subscriptionType;
        }
        if ('aliases' in data && data.aliases !== undefined)
            this.aliases = data.aliases;
        if ('userPresenceStatus' in data && data.userPresenceStatus !== undefined) {
            this.userPresenceStatus = Number(data.userPresenceStatus);
        }
        if ('teamXp' in data && data.teamXp !== undefined)
            this.teamXp = data.teamXp;
        return this;
    }
    kick() {
        return this.client.teams.kickMember(this.team, this);
    }
    setNickname(newNickname) {
        return this.client.teams.setMemberNickname(this.team, this, newNickname);
    }
}
exports.Member = Member;
//# sourceMappingURL=Member.js.map